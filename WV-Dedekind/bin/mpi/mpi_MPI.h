/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mpi_MPI */

#ifndef _Included_mpi_MPI
#define _Included_mpi_MPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mpi_MPI
 * Method:    saveSignalHandlers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_saveSignalHandlers
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    restoreSignalHandlers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_restoreSignalHandlers
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    InitNative
 * Signature: ([Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_mpi_MPI_InitNative
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     mpi_MPI
 * Method:    SetConstant
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_SetConstant
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    Finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_Finalize
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    Wtime
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_mpi_MPI_Wtime
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    Wtick
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_mpi_MPI_Wtick
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    Get_processor_name
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_mpi_MPI_Get_1processor_1name
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     mpi_MPI
 * Method:    Initialized
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_mpi_MPI_Initialized
  (JNIEnv *, jclass);

/*
 * Class:     mpi_MPI
 * Method:    Buffer_attach_native
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_Buffer_1attach_1native
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     mpi_MPI
 * Method:    Buffer_detach_native
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_mpi_MPI_Buffer_1detach_1native
  (JNIEnv *, jclass, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
